{
  "openapi": "3.1.0",
  "info": {
    "title": "Weather Agent A2A API",
    "description": "\n# Weather Agent A2A API\n\nAPI completa para comunicaci\u00f3n Agent-to-Agent (A2A) del agente meteorol\u00f3gico.\n\n## Caracter\u00edsticas\n\n- **JSON-RPC 2.0**: Protocolo est\u00e1ndar para comunicaci\u00f3n entre agentes\n- **Agent Discovery**: Descubrimiento autom\u00e1tico mediante Agent Card\n- **Capacidades Meteorol\u00f3gicas**: Clima actual, pron\u00f3sticos y b\u00fasqueda de ubicaciones\n- **Gesti\u00f3n de Tareas**: Ejecuci\u00f3n as\u00edncrona de operaciones complejas\n- **Monitoreo**: Health checks y m\u00e9tricas de rendimiento\n\n## Flujo de Comunicaci\u00f3n A2A\n\n1. **Descubrimiento**: GET `/.well-known/agent.json`\n2. **Capacidades**: POST `/rpc` con m\u00e9todo `get_capabilities`\n3. **Ejecuci\u00f3n**: POST `/rpc` con capacidades espec\u00edficas\n4. **Monitoreo**: GET `/health` y `/status`\n\n## Autenticaci\u00f3n\n\nActualmente no se requiere autenticaci\u00f3n. En producci\u00f3n se recomienda:\n- API Keys para agentes registrados\n- OAuth 2.0 para aplicaciones cliente\n- mTLS para comunicaci\u00f3n segura entre agentes\n\n## Rate Limiting\n\n- **Desarrollo**: Sin l\u00edmites\n- **Producci\u00f3n**: 100 requests/minuto por agente\n        ",
    "version": "1.0.0",
    "contact": {
      "name": "Weather Agent Support",
      "email": "support@weather-agent.com",
      "url": "https://weather-agent.com/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/.well-known/agent.json": {
      "get": {
        "summary": "Get Agent Card",
        "description": "Endpoint de descubrimiento A2A.",
        "operationId": "get_agent_card__well_known_agent_json_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Endpoint de salud del agente.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "Get Status",
        "description": "Endpoint de estado del agente.",
        "operationId": "get_status_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get Tasks",
        "description": "Obtener lista de tareas.",
        "operationId": "get_tasks_tasks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "summary": "Get Task",
        "description": "Obtener estado de una tarea espec\u00edfica.",
        "operationId": "get_task_tasks__task_id__get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/rpc": {
      "post": {
        "summary": "Handle Rpc",
        "description": "Endpoint principal JSON-RPC 2.0.",
        "operationId": "handle_rpc_rpc_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "AgentCard": {
        "type": "object",
        "properties": {
          "agent": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "capabilities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Capability"
                }
              }
            }
          }
        }
      },
      "Capability": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "input_schema": {
            "type": "object"
          },
          "output_schema": {
            "type": "object"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "JSONRPCRequest": {
        "type": "object",
        "required": [
          "jsonrpc",
          "method"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object"
          },
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "JSONRPCResponse": {
        "type": "object",
        "required": [
          "jsonrpc"
        ],
        "properties": {
          "jsonrpc": {
            "type": "string",
            "enum": [
              "2.0"
            ]
          },
          "result": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/JSONRPCError"
          },
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "JSONRPCError": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "WeatherData": {
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number"
          },
          "humidity": {
            "type": "number"
          },
          "pressure": {
            "type": "number"
          },
          "wind_speed": {
            "type": "number"
          },
          "weather_condition": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "country": {
            "type": "string"
          },
          "region": {
            "type": "string"
          }
        }
      }
    },
    "examples": {
      "get_current_weather_request": {
        "summary": "Solicitud de clima actual",
        "value": {
          "jsonrpc": "2.0",
          "method": "get_current_weather",
          "params": {
            "location": "Madrid"
          },
          "id": "weather-001"
        }
      },
      "get_current_weather_response": {
        "summary": "Respuesta de clima actual",
        "value": {
          "jsonrpc": "2.0",
          "result": {
            "status": "success",
            "location": {
              "name": "Madrid",
              "latitude": 40.4165,
              "longitude": -3.70256,
              "country": "Espa\u00f1a"
            },
            "current_weather": {
              "temperature": 24.0,
              "humidity": 65.0,
              "weather_condition": "partly_cloudy",
              "timestamp": "2025-06-13T22:00:00Z"
            }
          },
          "id": "weather-001"
        }
      },
      "search_locations_request": {
        "summary": "Solicitud de b\u00fasqueda de ubicaciones",
        "value": {
          "jsonrpc": "2.0",
          "method": "search_locations",
          "params": {
            "query": "Barcelona",
            "limit": 3
          },
          "id": "search-001"
        }
      },
      "submit_task_request": {
        "summary": "Env\u00edo de tarea as\u00edncrona",
        "value": {
          "jsonrpc": "2.0",
          "method": "submit_task",
          "params": {
            "capability": "get_current_weather",
            "input_data": {
              "location": "Tokyo"
            }
          },
          "id": "task-001"
        }
      },
      "error_response": {
        "summary": "Respuesta de error JSON-RPC",
        "value": {
          "jsonrpc": "2.0",
          "error": {
            "code": -32603,
            "message": "Error interno del servidor",
            "data": {
              "details": "No se encontr\u00f3 la ubicaci\u00f3n especificada"
            }
          },
          "id": "weather-001"
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8001",
      "description": "Development server"
    },
    {
      "url": "https://api.weather-agent.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Agent Discovery",
      "description": "Endpoints para descubrimiento de agentes A2A"
    },
    {
      "name": "Health & Status",
      "description": "Endpoints de salud y estado del agente"
    },
    {
      "name": "JSON-RPC",
      "description": "Comunicaci\u00f3n JSON-RPC 2.0 entre agentes"
    },
    {
      "name": "Task Management",
      "description": "Gesti\u00f3n de tareas as\u00edncronas"
    },
    {
      "name": "Weather Capabilities",
      "description": "Capacidades meteorol\u00f3gicas del agente"
    }
  ]
}